description: |
  Installs kubectl and kops (latest releases, by default)
  Requirements: curl, amd64 architecture

parameters:
  kops-version:
    type: string
    default: "latest"
  kubectl-version:
    type: string
    default: "latest"

steps:
  - run:
      name: Install kops
      command: |
        if [[ <<parameters.kops-version>> == "latest" ]]; then
          # get latest kops release
          KOPS_VERSION=$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)
        else
          KOPS_VERSION=<<parameters.kops-version>>
        fi

        PLATFORM="linux"
        if [ -n "$(uname | grep "Darwin")" ]; then
          PLATFORM="darwin"
        fi

        # download kops
        curl -LO https://github.com/kubernetes/kops/releases/download/$KOPS_VERSION/kops-$PLATFORM-amd64

        [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
        
        $SUDO chmod +x kops-$PLATFORM-amd64

        $SUDO mv kops-$PLATFORM-amd64 /usr/local/bin/kops

  - run:
      name: Install kubectl
      command: |
        if [[ <<parameters.kubectl-version>> == "latest" ]]; then
          # get latest kubectl release
          KUBECTL_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        else
          KUBECTL_VERSION=<<parameters.kubectl-version>>
        fi

        PLATFORM="linux"
        if [ -n "$(uname | grep "Darwin")" ]; then
          PLATFORM="darwin"
        fi

        # download kubectl
        curl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/$PLATFORM/amd64/kubectl
        
        [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo

        $SUDO chmod +x ./kubectl

        $SUDO mv ./kubectl /usr/local/bin
